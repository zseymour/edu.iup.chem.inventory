/**
 * This class is generated by jOOQ
 */
package edu.iup.chem.inventory.db.inventory.tables.records;

import java.util.List;

import edu.iup.chem.inventory.dao.RoleDao;
import edu.iup.chem.inventory.dao.RoomDao;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = { "http://www.jooq.org", "2.5.1" }, comments = "This class is generated by jOOQ")
public class UserRecord
		extends
		org.jooq.impl.UpdatableRecordImpl<edu.iup.chem.inventory.db.inventory.tables.records.UserRecord> {

	private static final long	serialVersionUID	= -1340883534;

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(edu.iup.chem.inventory.db.inventory.tables.User.USER);
	}

	/**
	 * Primary Key: Unique role ID.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_2
	 * FOREIGN KEY (rid)
	 * REFERENCES inventory.role (rid)
	 * </pre></code>
	 */
	public edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord fetchRoleByRid() {
		return RoleDao.fetchRoleByRid(getRid());
	}

	/**
	 * Unique role name.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_3
	 * FOREIGN KEY (role_name)
	 * REFERENCES inventory.role (name)
	 * </pre></code>
	 */
	public edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord fetchRoleByRoleName() {
		return create()
				.selectFrom(
						edu.iup.chem.inventory.db.inventory.tables.Role.ROLE)
				.where(edu.iup.chem.inventory.db.inventory.tables.Role.ROLE.NAME
						.equal(getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROLE_NAME)))
				.fetchOne();
	}

	/**
	 * The table column <code>inventory.user.room</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_1
	 * FOREIGN KEY (room)
	 * REFERENCES inventory.room (room)
	 * </pre></code>
	 */
	public edu.iup.chem.inventory.db.inventory.tables.records.RoomRecord fetchRoom() {
		return create()
				.selectFrom(
						edu.iup.chem.inventory.db.inventory.tables.Room.ROOM)
				.where(edu.iup.chem.inventory.db.inventory.tables.Room.ROOM.ROOM_
						.equal(getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROOM)))
				.fetchOne();
	}

	public List<RoomRecord> fetchUserRooms() {
		return RoomDao.fetchUserRooms(getUid());
	}

	/**
	 * User’s e-mail address.
	 */
	public java.lang.String getEmail() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.EMAIL);
	}

	public java.sql.Date getExpiration() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.EXPIRATION);
	}

	/**
	 * The table column <code>inventory.user.name</code>
	 */
	public java.lang.String getName() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.NAME);
	}

	/**
	 * User’s password (hashed).
	 */
	public java.lang.String getPass() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.PASS);
	}

	/**
	 * Primary Key: Unique role ID.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_2
	 * FOREIGN KEY (rid)
	 * REFERENCES inventory.role (rid)
	 * </pre></code>
	 */
	public org.jooq.tools.unsigned.UInteger getRid() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.RID);
	}

	/**
	 * Unique role name.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_3
	 * FOREIGN KEY (role_name)
	 * REFERENCES inventory.role (name)
	 * </pre></code>
	 */
	public java.lang.String getRoleName() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROLE_NAME);
	}

	/**
	 * The table column <code>inventory.user.room</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_1
	 * FOREIGN KEY (room)
	 * REFERENCES inventory.room (room)
	 * </pre></code>
	 */
	public java.lang.String getRoom() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROOM);
	}

	/**
	 * Primary Key: Unique user ID.
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getUid() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.UID);
	}

	/**
	 * Unique user name.
	 */
	public java.lang.String getUsername() {
		return getValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.USERNAME);
	}

	/**
	 * User’s e-mail address.
	 */
	public void setEmail(final java.lang.String value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.EMAIL,
				value);
	}

	public void setExpiration(final java.sql.Date value) {
		setValue(
				edu.iup.chem.inventory.db.inventory.tables.User.USER.EXPIRATION,
				value);
	}

	public void setExpirationFromUtil(final java.util.Date value) {
		setValue(
				edu.iup.chem.inventory.db.inventory.tables.User.USER.EXPIRATION,
				new java.sql.Date(value.getTime()));
	}

	/**
	 * The table column <code>inventory.user.name</code>
	 */
	public void setName(final java.lang.String value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.NAME,
				value);
	}

	/**
	 * User’s password (hashed).
	 */
	public void setPass(final java.lang.String value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.PASS,
				value);
	}

	/**
	 * Link this record to a given
	 * {@link edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord
	 * RoleRecord}
	 */
	public void setRid(
			final edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord value) {
		if (value == null) {
			setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.RID,
					null);
		} else {
			setValue(
					edu.iup.chem.inventory.db.inventory.tables.User.USER.RID,
					value.getValue(edu.iup.chem.inventory.db.inventory.tables.Role.ROLE.RID));
		}
	}

	/**
	 * Primary Key: Unique role ID.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_2
	 * FOREIGN KEY (rid)
	 * REFERENCES inventory.role (rid)
	 * </pre></code>
	 */
	public void setRid(final org.jooq.tools.unsigned.UInteger value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.RID,
				value);
	}

	/**
	 * Link this record to a given
	 * {@link edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord
	 * RoleRecord}
	 */
	public void setRoleName(
			final edu.iup.chem.inventory.db.inventory.tables.records.RoleRecord value) {
		if (value == null) {
			setValue(
					edu.iup.chem.inventory.db.inventory.tables.User.USER.ROLE_NAME,
					null);
		} else {
			setValue(
					edu.iup.chem.inventory.db.inventory.tables.User.USER.ROLE_NAME,
					value.getValue(edu.iup.chem.inventory.db.inventory.tables.Role.ROLE.NAME));
		}
	}

	/**
	 * Unique role name.
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_3
	 * FOREIGN KEY (role_name)
	 * REFERENCES inventory.role (name)
	 * </pre></code>
	 */
	public void setRoleName(final java.lang.String value) {
		setValue(
				edu.iup.chem.inventory.db.inventory.tables.User.USER.ROLE_NAME,
				value);
	}

	/**
	 * Link this record to a given
	 * {@link edu.iup.chem.inventory.db.inventory.tables.records.RoomRecord
	 * RoomRecord}
	 */
	public void setRoom(
			final edu.iup.chem.inventory.db.inventory.tables.records.RoomRecord value) {
		if (value == null) {
			setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROOM,
					null);
		} else {
			setValue(
					edu.iup.chem.inventory.db.inventory.tables.User.USER.ROOM,
					value.getValue(edu.iup.chem.inventory.db.inventory.tables.Room.ROOM.ROOM_));
		}
	}

	/**
	 * The table column <code>inventory.user.room</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT user_ibfk_1
	 * FOREIGN KEY (room)
	 * REFERENCES inventory.room (room)
	 * </pre></code>
	 */
	public void setRoom(final java.lang.String value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.ROOM,
				value);
	}

	/**
	 * Primary Key: Unique user ID.
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setUid(final java.lang.Integer value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.UID,
				value);
	}

	/**
	 * Unique user name.
	 */
	public void setUsername(final java.lang.String value) {
		setValue(edu.iup.chem.inventory.db.inventory.tables.User.USER.USERNAME,
				value);
	}

	@Override
	public String toString() {
		return getName();
	}
}
