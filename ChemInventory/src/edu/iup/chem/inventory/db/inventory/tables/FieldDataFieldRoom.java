/**
 * This class is generated by jOOQ
 */
package edu.iup.chem.inventory.db.inventory.tables;

/**
 * This class is generated by jOOQ.
 *
 * Data storage for field 7 (field_room)
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.1"},
                            comments = "This class is generated by jOOQ")
public class FieldDataFieldRoom extends org.jooq.impl.UpdatableTableImpl<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord> {

	private static final long serialVersionUID = -2089336498;

	/**
	 * The singleton instance of inventory.field_data_field_room
	 */
	public static final edu.iup.chem.inventory.db.inventory.tables.FieldDataFieldRoom FIELD_DATA_FIELD_ROOM = new edu.iup.chem.inventory.db.inventory.tables.FieldDataFieldRoom();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord> getRecordType() {
		return edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord.class;
	}

	/**
	 * The entity type this data is attached to
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, java.lang.String> ENTITY_TYPE = createField("entity_type", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The field instance bundle to which this row belongs, used when deleting a field instance
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, java.lang.String> BUNDLE = createField("bundle", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * A boolean indicating whether this data item has been deleted
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, java.lang.Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT, this);

	/**
	 * The entity id this data is attached to
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT field_data_field_room_ibfk_1
	 * FOREIGN KEY (entity_id)
	 * REFERENCES inventory.users (uid)
	 * </pre></code>
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, org.jooq.tools.unsigned.UInteger> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The entity revision id this data is attached to, or NULL if the entity type is not versioned
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, org.jooq.tools.unsigned.UInteger> REVISION_ID = createField("revision_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The language for this data item.
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, java.lang.String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The sequence number for this data item, used for multi-value fields
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, org.jooq.tools.unsigned.UInteger> DELTA = createField("delta", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this);

	/**
	 * The table column <code>inventory.field_data_field_room.field_room_value</code>
	 */
	public final org.jooq.TableField<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, java.lang.String> FIELD_ROOM_VALUE = createField("field_room_value", org.jooq.impl.SQLDataType.VARCHAR, this);

	public FieldDataFieldRoom() {
		super("field_data_field_room", edu.iup.chem.inventory.db.inventory.Inventory.INVENTORY);
	}

	public FieldDataFieldRoom(java.lang.String alias) {
		super(alias, edu.iup.chem.inventory.db.inventory.Inventory.INVENTORY, edu.iup.chem.inventory.db.inventory.tables.FieldDataFieldRoom.FIELD_DATA_FIELD_ROOM);
	}

	@Override
	public org.jooq.UniqueKey<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord> getMainKey() {
		return edu.iup.chem.inventory.db.inventory.Keys.KEY_FIELD_DATA_FIELD_ROOM_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord>>asList(edu.iup.chem.inventory.db.inventory.Keys.KEY_FIELD_DATA_FIELD_ROOM_PRIMARY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<edu.iup.chem.inventory.db.inventory.tables.records.FieldDataFieldRoomRecord, ?>>asList(edu.iup.chem.inventory.db.inventory.Keys.FIELD_DATA_FIELD_ROOM_IBFK_1);
	}

	@Override
	public edu.iup.chem.inventory.db.inventory.tables.FieldDataFieldRoom as(java.lang.String alias) {
		return new edu.iup.chem.inventory.db.inventory.tables.FieldDataFieldRoom(alias);
	}
}
